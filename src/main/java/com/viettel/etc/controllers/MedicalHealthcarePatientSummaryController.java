package com.viettel.etc.controllers;import com.viettel.etc.dto.MedicalHealthcarePatientSummaryDTO;import com.viettel.etc.services.MedicalHealthcarePatientSummaryService;import com.viettel.etc.utils.ErrorApp;import com.viettel.etc.utils.FnCommon;import com.viettel.etc.utils.TeleCareException;import com.viettel.etc.xlibrary.core.constants.FunctionCommon;import org.apache.log4j.Logger;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.http.MediaType;import org.springframework.http.ResponseEntity;import org.springframework.security.core.Authentication;import org.springframework.security.core.annotation.AuthenticationPrincipal;import org.springframework.web.bind.annotation.*;import javax.validation.Valid;/** * Autogen class: * * @author ToolGen * @date Mon Sep 14 08:36:28 ICT 2020 */@RestControllerpublic class MedicalHealthcarePatientSummaryController {	@Autowired	private MedicalHealthcarePatientSummaryService medicalHealthcarePatientSummaryService;	private static final Logger LOGGER = Logger.getLogger(MedicalHealthcareAllergyController.class);	/**	 * api get patient overview	 *	 * @param authentication: thong tin nguoi dung	 * @param dataParams      params client	 * @return	 */	@GetMapping(value = "/{patientId}/overview", produces = MediaType.APPLICATION_JSON_VALUE)	public ResponseEntity<Object> getPatientOverview(@AuthenticationPrincipal Authentication authentication,													 @PathVariable Integer patientId, MedicalHealthcarePatientSummaryDTO dataParams) {        /*        ==========================================================        authenEntity: user info and role        dataParams: danh sach bien client co the truyen len        ==========================================================        */		dataParams.setPatientId(patientId);		Object resultObj;		try {			resultObj = medicalHealthcarePatientSummaryService.getPatientOverview(dataParams, patientId);		} catch (TeleCareException e) {			return new ResponseEntity<>(FnCommon.responseToClient(e), HttpStatus.OK);		}		return new ResponseEntity<>(FunctionCommon.responseToClient(resultObj), HttpStatus.OK);	}	/**	 * api get patient overview	 *	 * @param authentication: thong tin nguoi dung	 * @param dataParams      params client	 * @return	 */	@PostMapping(value = "/{patientId}/healthcare_summary", produces = MediaType.APPLICATION_JSON_VALUE)	public ResponseEntity<Object> createPatientSummary(@AuthenticationPrincipal Authentication authentication,													   @PathVariable Integer patientId, @Valid @RequestBody MedicalHealthcarePatientSummaryDTO dataParams) {        /*        ==========================================================        authenEntity: user info and role        dataParams: danh sach bien client co the truyen len        ==========================================================        */		dataParams.setPatientId(patientId);		Object resultObj;		try {			resultObj = medicalHealthcarePatientSummaryService.createPatientSummary(dataParams, authentication);		} catch (TeleCareException e) {			return new ResponseEntity<>(FnCommon.responseToClient(e), HttpStatus.OK);		} catch (Exception e) {			LOGGER.info(e);			return new ResponseEntity<>(FnCommon.responseToClient(ErrorApp.ERROR_INPUTPARAMS), HttpStatus.OK);		}		return new ResponseEntity<>(FnCommon.responseToClient(resultObj), HttpStatus.OK);	}	/**	 * api get patient overview	 *	 * @param authentication: thong tin nguoi dung	 * @param dataParams      params client	 * @return	 */	@PostMapping(value = "/{patientId}/health-info", produces = MediaType.APPLICATION_JSON_VALUE)	public ResponseEntity<Object> createPatientSummaryRest(@AuthenticationPrincipal Authentication authentication,													   @PathVariable Integer patientId, @Valid @RequestBody MedicalHealthcarePatientSummaryDTO dataParams) {        /*        ==========================================================        authenEntity: user info and role        dataParams: danh sach bien client co the truyen len        ==========================================================        */		dataParams.setPatientId(patientId);		Object resultObj;		try {			resultObj = medicalHealthcarePatientSummaryService.createPatientSummaryRest(dataParams, authentication);		} catch (TeleCareException e) {			return new ResponseEntity<>(FnCommon.responseToClient(e), HttpStatus.OK);		} catch (Exception e) {			LOGGER.info(e);			return new ResponseEntity<>(FnCommon.responseToClient(ErrorApp.ERROR_INPUTPARAMS), HttpStatus.OK);		}		return new ResponseEntity<>(FnCommon.responseToClient(resultObj), HttpStatus.OK);	}}