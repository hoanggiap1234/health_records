package com.viettel.etc.services.impl;import com.viettel.etc.dto.BookingInformationResultDTO;import com.viettel.etc.repositories.BookingInformationResultRepository;import com.viettel.etc.services.BookingInformationResultService;import com.viettel.etc.services.tables.PatientsServiceJPA;import com.viettel.etc.utils.ErrorApp;import com.viettel.etc.utils.FnCommon;import com.viettel.etc.utils.TeleCareException;import com.viettel.etc.xlibrary.core.entities.ResultSelectEntity;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.core.Authentication;import org.springframework.stereotype.Service;/** * Autogen class:  *  * @author ToolGen * @date Thu Aug 27 15:41:46 ICT 2020 */@Servicepublic class BookingInformationResultServiceImpl implements BookingInformationResultService{    @Autowired     private BookingInformationResultRepository bookingInformationResultRepository;    @Autowired    private PatientsServiceJPA patientsServiceJPA;    /**     * api lay danh sach tu van tu xa     *      * @param itemParamsEntity params client     * @return      */    @Override    public Object getBookingInformationResult(BookingInformationResultDTO itemParamsEntity, Authentication authentication) throws TeleCareException {        Integer currentPatientId = patientsServiceJPA.getUserIdFromToken(authentication);        Boolean hasRelationship = patientsServiceJPA.checkRelationship(itemParamsEntity.getPatientId(), currentPatientId);        if (!hasRelationship) {            FnCommon.throwsErrorApp(ErrorApp.ERR_PATIENT_RELATIONSHIP_NOT_EXIST);        }        ResultSelectEntity dataResult = bookingInformationResultRepository.getBookingInformationResult(itemParamsEntity);        return dataResult;    }}