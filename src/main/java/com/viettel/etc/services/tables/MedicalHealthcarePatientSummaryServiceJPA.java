package com.viettel.etc.services.tables;import com.viettel.etc.dto.MedicalHealthcarePatientSummaryDTO;import com.viettel.etc.repositories.tables.MedicalHealthcarePatientDetailRepositoryJPA;import com.viettel.etc.repositories.tables.MedicalHealthcarePatientSummaryRepositoryJPA;import com.viettel.etc.repositories.tables.entities.MedicalHealthcarePatientDetailEntity;import com.viettel.etc.repositories.tables.entities.MedicalHealthcarePatientSummaryEntity;import com.viettel.etc.utils.ErrorApp;import com.viettel.etc.utils.FnCommon;import com.viettel.etc.utils.TeleCareException;import org.apache.commons.beanutils.BeanUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.lang.reflect.Field;import java.util.ArrayList;import java.util.Arrays;import java.util.List;import java.util.Optional;/** * Autogen class: Create Service For Table Name Medical_healthcare_patient_summary *  * @author ToolGen * @date Mon Sep 14 08:36:29 ICT 2020 */@Servicepublic class MedicalHealthcarePatientSummaryServiceJPA {    @Autowired    MedicalHealthcarePatientSummaryRepositoryJPA medical_healthcare_patient_summary;    @Autowired    PatientsServiceJPA patientServiceJPA;    @Autowired    MedicalHealthcarePatientDetailRepositoryJPA medicalHealthcarePatientDetailRepositoryJPA;//    public List<MedicalHealthcarePatientSummaryEntity>  findAll() {//        return this.medical_healthcare_patient_summary.findAll();//    }    public MedicalHealthcarePatientSummaryEntity save(MedicalHealthcarePatientSummaryEntity Medical_healthcare_patient_summary) {        return this.medical_healthcare_patient_summary.save(Medical_healthcare_patient_summary);    }    public Optional<MedicalHealthcarePatientSummaryEntity> findById(Integer id) {        return this.medical_healthcare_patient_summary.findById(id);    }//    public void deleteById(Integer id) {//        this.medical_healthcare_patient_summary.deleteById(id);//    }////    public MedicalHealthcarePatientSummaryEntity getOne(Integer id) {//        return this.medical_healthcare_patient_summary.getOne(id);//    }////    public Boolean existsById(Integer id) {//        return this.medical_healthcare_patient_summary.existsById(id);//    }////    public MedicalHealthcarePatientSummaryEntity findFirstByPatientId(int patientId) {//        return medical_healthcare_patient_summary.findFirstByPatientIdOrderByCreateDateDesc(patientId);//    }    public Object createPatientSummary(MedicalHealthcarePatientSummaryDTO dto) throws Exception {        boolean existsPatient = patientServiceJPA.existsById(dto.getPatientId());        if (!existsPatient) {            FnCommon.throwsErrorApp(ErrorApp.ERR_DATA_PATIENT_NOT_EXIST);        }        // TODO : get create user from authentication        List<MedicalHealthcarePatientSummaryEntity> updates = new ArrayList<>();        List<MedicalHealthcarePatientSummaryEntity> entities = medical_healthcare_patient_summary.findByPatientId(dto.getPatientId());        Field[] dtoFields = dto.getClass().getDeclaredFields();        List<String> fieldUpdate = Arrays.asList("bloodSugar", "spo2Score", "bloodPressure", "heartBeat", "temperature", "height", "weight", "bmi", "bloodAbo", "bloodRh", "diseases");        for (Field dtoField : dtoFields) {            dtoField.setAccessible(true);            if (!fieldUpdate.contains(dtoField.getName()) || dtoField.get(dto) == null) {                continue;            }            MedicalHealthcarePatientSummaryEntity entityNew = new MedicalHealthcarePatientSummaryEntity();            for (MedicalHealthcarePatientSummaryEntity entity : entities) {                Field entityField = entity.getClass().getDeclaredField(dtoField.getName());                entityField.setAccessible(true);                if (entityField.get(entity) != null) {                    entityNew = entity;                    break;                }            }            BeanUtils.setProperty(entityNew, dtoField.getName(), dtoField.get(dto));            BeanUtils.setProperty(entityNew, "resultDate", dto.getResultDate());            BeanUtils.setProperty(entityNew, "patientId", dto.getPatientId());            updates.add(entityNew);        }        if (!updates.isEmpty()) {            medical_healthcare_patient_summary.saveAll(updates);            insertToTableDetail(dto);        }        return updates;    }    void insertToTableDetail(MedicalHealthcarePatientSummaryDTO dto) throws TeleCareException {        MedicalHealthcarePatientDetailEntity entity = new MedicalHealthcarePatientDetailEntity();        dto.setSummaryId(null);        FnCommon.copyProperties(dto, entity);        if (entity.getClass().getDeclaredFields().length == FnCommon.getNullPropertyNames(entity).length) {            FnCommon.throwsErrorApp(ErrorApp.ERROR_INPUTPARAMS);        }        medicalHealthcarePatientDetailRepositoryJPA.save(entity);    }}