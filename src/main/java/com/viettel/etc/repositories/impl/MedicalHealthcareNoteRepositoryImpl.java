package com.viettel.etc.repositories.impl;import com.viettel.etc.dto.MedicalHealthcareNoteDTO;import com.viettel.etc.repositories.MedicalHealthcareNoteRepository;import com.viettel.etc.xlibrary.core.entities.ResultSelectEntity;import com.viettel.etc.xlibrary.core.repositories.CommonDataBaseRepository;import org.springframework.stereotype.Repository;import java.util.HashMap;/** * Autogen class Repository Impl: * * @author ToolGen * @date Thu Aug 27 16:04:51 ICT 2020 */@Repositorypublic class MedicalHealthcareNoteRepositoryImpl extends CommonDataBaseRepository implements MedicalHealthcareNoteRepository {	/**	 * api lay danh sach cach ghi chu	 *	 * @param itemParamsEntity: params client truyen len	 * @return	 */	@Override	public ResultSelectEntity getMedicalHealthcareNote(MedicalHealthcareNoteDTO itemParamsEntity) {		StringBuilder sql = new StringBuilder();		sql.append("select note_id as noteId, patient_id as patientId, status, status_date as statusDate, note from medical_healthcare_notes mhn " +				"where is_active = 1 and is_delete = 0 and (patient_id = :patientId ");		HashMap<String, Object> hmapParams = new HashMap<>();		hmapParams.put("patientId", itemParamsEntity.getPatientId());		if (itemParamsEntity.getPhoneNumber() != null) {			sql.append("or phone_number like :phoneNumber");			hmapParams.put("phoneNumber", "%" + itemParamsEntity.getPhoneNumber() + "%");		}		sql.append(")");		Integer start = null;		if (itemParamsEntity != null && itemParamsEntity.getStartrecord() != null) {			start = itemParamsEntity.getStartrecord();		}		Integer pageSize = null;		if (itemParamsEntity != null && itemParamsEntity.getPagesize() != null) {			pageSize = itemParamsEntity.getPagesize();		}		ResultSelectEntity resultData = getListDataAndCount(sql, hmapParams, start, pageSize, MedicalHealthcareNoteDTO.class);		return resultData;	}	/**	 * @param itemParamsEntity	 * @return	 */	@Override	public Object getMedicalHealthcareNoteDetail(MedicalHealthcareNoteDTO itemParamsEntity) {		StringBuilder sql = new StringBuilder();		sql.append("select note_id as noteId, patient_id as patientId, status, status_date as statusDate, note from medical_healthcare_notes mhn " +				"where is_active = 1 and is_delete = 0 and patient_id = :patientId and note_id = :noteId");		HashMap<String, Object> hmapParams = new HashMap<>();		hmapParams.put("patientId", itemParamsEntity.getPatientId());		hmapParams.put("noteId", itemParamsEntity.getNoteId());		Object resultData = getFirstData(sql, hmapParams, MedicalHealthcareNoteDTO.class);		return resultData;	}}