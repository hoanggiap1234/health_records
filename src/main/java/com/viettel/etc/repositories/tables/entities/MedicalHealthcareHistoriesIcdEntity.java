package com.viettel.etc.repositories.tables.entities;import com.viettel.etc.utils.Constants;import lombok.Data;import lombok.NoArgsConstructor;import org.hibernate.annotations.CreationTimestamp;import org.hibernate.annotations.UpdateTimestamp;import javax.persistence.*;import java.io.Serializable;import java.util.Date;import java.util.Objects;/** * Autogen class Entity: Create Entity For Table Name Medical_healthcare_histories_icd * * @author ToolGen * @date Thu Sep 24 17:40:08 ICT 2020 */@Data@NoArgsConstructor@Entity@Table(name = "MEDICAL_HEALTHCARE_HISTORIES_ICD")public class MedicalHealthcareHistoriesIcdEntity implements Serializable {	@Id	@GeneratedValue(strategy = GenerationType.IDENTITY)	@Column(name = "PATIENT_ICD_ID")	Integer patientIcdId;	@Column(name = "HISTORIES_ID")	Integer historiesId;	@Column(name = "PATIENT_ID")	Integer patientId;	@Column(name = "DISEASES_CODE")	String diseasesCode;	@Column(name = "DISEASES_NAME")	String diseasesName;	@Column(name = "PHONE_NUMBER")	String phoneNumber;	@Column(name = "IS_MAIN")	Integer isMain;	@Column(name = "IS_SYNC")	Integer isSync;	@Column(name = "IS_DELETE")	Integer isDelete;	@Column(name = "IS_ACTIVE")	Integer isActive;	@Column(name = "CREATE_USER_ID")	Integer createUserId;	@Column(name = "UPDATE_USER_ID")	Integer updateUserId;	@Column(name = "CREATE_DATE")	@CreationTimestamp	Date createDate = new Date();	@Column(name = "UPDATE_DATE")	@UpdateTimestamp	java.sql.Date updateDate;	@PrePersist	public void createDefaultProperti() {		if (this.isActive == null) {			this.isActive = Constants.IS_ACTIVE;		}		if (this.isDelete == null) {			this.isDelete = Constants.IS_NOT_DELETE;		}		if (this.isSync == null) {			this.isSync = Constants.IS_NOT_SYNC;		}		if (this.createDate == null) {			this.createDate = new Date();		}	}	@Override	public boolean equals(Object o) {		if (this == o) return true;		if (o == null || getClass() != o.getClass()) return false;		MedicalHealthcareHistoriesIcdEntity that = (MedicalHealthcareHistoriesIcdEntity) o;		return historiesId.equals(that.historiesId) &&				diseasesCode.equals(that.diseasesCode);	}	@Override	public int hashCode() {		return Objects.hash(historiesId, diseasesCode);	}}